# generated by datamodel-codegen:
#   filename:  figshare_schema_from_docs.json
#   timestamp: 2023-05-09T21:30:18+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field


class AllOfItem(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ResourceDoi(BaseModel):
    description: str
    type: str
    example: str


class ItemType(BaseModel):
    description: str
    type: str
    format: str
    minimum: int
    maximum: int
    example: int


class Doi(BaseModel):
    description: str
    type: str
    example: str


class Handle(BaseModel):
    description: str
    type: str
    example: str


class Properties(BaseModel):
    resource_doi: ResourceDoi
    item_type: ItemType
    doi: Doi
    handle: Handle


class ArticleSearch(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    allOf: List[AllOfItem]
    properties: Properties


class ResourceId(BaseModel):
    description: str
    type: str
    example: str


class Properties1(BaseModel):
    resource_id: ResourceId


class PrivateArticleSearch(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    allOf: List[AllOfItem]
    properties: Properties1


class Title(BaseModel):
    type: str
    description: str
    maxLength: int
    minLength: int
    example: str


class Description(BaseModel):
    type: str
    description: str
    default: str
    example: str
    maxLength: int


class Items(BaseModel):
    type: str


class Tags(BaseModel):
    type: str
    description: str
    items: Items
    default: List
    example: List[str]


class Keywords(BaseModel):
    type: str
    description: str
    items: Items
    default: List
    example: List[str]


class Items2(BaseModel):
    type: str
    format: str


class References(BaseModel):
    type: str
    items: Items2
    description: str
    default: List
    example: List[str]


class Categories(BaseModel):
    type: str
    items: Items2
    description: str
    default: List
    example: List[int]


class Items4(BaseModel):
    type: str


class ExampleItem(BaseModel):
    name: Optional[str] = None
    id: Optional[int] = None


class Authors(BaseModel):
    type: str
    items: Items4
    description: str
    default: List
    example: List[ExampleItem]


class Example(BaseModel):
    defined_key: str


class CustomFields(BaseModel):
    type: str
    description: str
    example: Example


class DefinedType(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class Funding(BaseModel):
    type: str
    description: str
    default: str


class Items5(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FundingList(BaseModel):
    type: str
    description: str
    items: Items5


class License(BaseModel):
    type: str
    format: str
    description: str
    default: int
    example: int


class Doi1(BaseModel):
    type: str
    description: str
    default: str


class Handle1(BaseModel):
    type: str
    description: str
    default: str


class ResourceDoi1(BaseModel):
    type: str
    description: str
    default: str


class ResourceTitle(BaseModel):
    type: str
    description: str
    default: str


class GroupId(BaseModel):
    type: str
    format: str
    description: str


class Properties2(BaseModel):
    title: Title
    description: Description
    tags: Tags
    keywords: Keywords
    references: References
    categories: Categories
    authors: Authors
    custom_fields: CustomFields
    defined_type: DefinedType
    funding: Funding
    funding_list: FundingList
    license: License
    doi: Doi1
    handle: Handle1
    resource_doi: ResourceDoi1
    resource_title: ResourceTitle
    group_id: GroupId


class ArticleUpdate(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties2


class Items6(BaseModel):
    type: str


class Tags1(BaseModel):
    type: str
    description: str
    items: Items6
    default: List
    example: List[str]


class Keywords1(BaseModel):
    type: str
    description: str
    items: Items6
    default: List
    example: List[str]


class Items8(BaseModel):
    type: str
    format: str


class References1(BaseModel):
    type: str
    items: Items8
    description: str
    default: List
    example: List[str]


class Categories1(BaseModel):
    type: str
    items: Items8
    description: str
    default: List
    example: List[int]


class Items10(BaseModel):
    type: str


class Authors1(BaseModel):
    type: str
    items: Items10
    description: str
    default: List
    example: List[ExampleItem]


class CustomFields1(BaseModel):
    type: str
    description: str
    example: Example


class Items11(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FundingList1(BaseModel):
    type: str
    description: str
    items: Items11


class Properties3(BaseModel):
    title: Title
    description: Description
    tags: Tags1
    keywords: Keywords1
    references: References1
    categories: Categories1
    authors: Authors1
    custom_fields: CustomFields1
    defined_type: DefinedType
    funding: Funding
    funding_list: FundingList1
    license: License
    doi: Doi1
    handle: Handle1
    resource_doi: ResourceDoi1
    resource_title: ResourceTitle
    group_id: GroupId


class ArticleCreate(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    required: List[str]
    properties: Properties3


class Id(BaseModel):
    type: str
    format: str
    description: str
    example: int


class Title2(BaseModel):
    type: str
    description: str
    example: str


class Doi3(BaseModel):
    type: str
    description: str
    example: str


class Handle3(BaseModel):
    type: str
    description: str
    example: str


class GroupId2(BaseModel):
    type: List[str]
    description: str
    example: int


class Url(BaseModel):
    type: str
    description: str
    format: str
    example: str


class UrlPublicHtml(BaseModel):
    type: str
    description: str
    format: str
    example: str


class UrlPublicApi(BaseModel):
    type: str
    description: str
    format: str
    example: str


class UrlPrivateHtml(BaseModel):
    type: str
    description: str
    format: str
    example: str


class UrlPrivateApi(BaseModel):
    type: str
    description: str
    format: str
    example: str


class PublishedDate(BaseModel):
    type: List[str]
    description: str
    example: str


class Thumb(BaseModel):
    type: str
    description: str
    format: str
    example: str


class DefinedType2(BaseModel):
    type: str
    format: str
    description: str
    example: int


class ResourceTitle2(BaseModel):
    type: List[str]
    description: str
    example: str


class ResourceDoi3(BaseModel):
    type: List[str]
    description: str
    example: str


class Properties4(BaseModel):
    id: Id
    title: Title2
    doi: Doi3
    handle: Handle3
    group_id: GroupId2
    url: Url
    url_public_html: UrlPublicHtml
    url_public_api: UrlPublicApi
    url_private_html: UrlPrivateHtml
    url_private_api: UrlPrivateApi
    published_date: PublishedDate
    thumb: Thumb
    defined_type: DefinedType2
    resource_title: ResourceTitle2
    resource_doi: ResourceDoi3


class Article(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties4


class Citation(BaseModel):
    type: str
    description: str
    example: str


class ConfidentialReason(BaseModel):
    description: str
    type: str
    example: str


class EmbargoType(BaseModel):
    description: str
    type: List[str]
    example: Any


class IsConfidential(BaseModel):
    description: str
    type: str
    example: bool


class Size(BaseModel):
    description: str
    type: str
    format: str
    example: int


class Funding2(BaseModel):
    type: str
    description: str
    example: str


class Items12(BaseModel):
    type: str


class FundingList2(BaseModel):
    type: str
    items: Items12


class Tags2(BaseModel):
    description: str
    type: str
    items: Items12
    example: List[str]


class Version(BaseModel):
    description: str
    type: str
    format: str
    example: int


class IsActive(BaseModel):
    description: str
    type: str
    example: bool


class IsMetadataRecord(BaseModel):
    description: str
    type: str
    example: bool


class MetadataReason(BaseModel):
    description: str
    type: str
    example: str


class Status(BaseModel):
    type: str
    description: str
    example: str


class Description2(BaseModel):
    type: str
    description: str
    example: str


class IsEmbargoed(BaseModel):
    type: str
    description: str
    example: bool


class EmbargoDate(BaseModel):
    description: str
    type: List[str]
    example: str


class IsPublic(BaseModel):
    description: str
    type: str
    example: bool


class ModifiedDate(BaseModel):
    description: str
    type: List[str]
    example: str


class CreatedDate(BaseModel):
    type: str
    description: str
    example: str


class HasLinkedFile(BaseModel):
    type: str
    description: str
    example: bool


class Items14(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Categories2(BaseModel):
    type: str
    description: str
    items: Items14


class License2(BaseModel):
    description: str
    field_ref: str = Field(..., alias='$ref')


class EmbargoReason(BaseModel):
    type: str
    description: str
    example: str


class Items15(BaseModel):
    type: str
    format: str


class References2(BaseModel):
    type: str
    description: str
    items: Items15
    example: List[str]


class Properties5(BaseModel):
    citation: Citation
    confidential_reason: ConfidentialReason
    embargo_type: EmbargoType
    is_confidential: IsConfidential
    size: Size
    funding: Funding2
    funding_list: FundingList2
    tags: Tags2
    version: Version
    is_active: IsActive
    is_metadata_record: IsMetadataRecord
    metadata_reason: MetadataReason
    status: Status
    description: Description2
    is_embargoed: IsEmbargoed
    embargo_date: EmbargoDate
    is_public: IsPublic
    modified_date: ModifiedDate
    created_date: CreatedDate
    has_linked_file: HasLinkedFile
    categories: Categories2
    license: License2
    embargo_reason: EmbargoReason
    references: References2


class ProjectArticle(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    allOf: List[AllOfItem]
    properties: Properties5


class FigshareUrl(BaseModel):
    type: str
    format: str
    description: str
    example: str


class Items16(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Files(BaseModel):
    type: str
    description: str
    items: Items16


class Authors2(BaseModel):
    type: str
    description: str
    items: Items16


class CustomFields2(BaseModel):
    type: str
    description: str
    items: Items16


class Properties6(BaseModel):
    figshare_url: FigshareUrl
    files: Files
    authors: Authors2
    custom_fields: CustomFields2


class ArticleComplete(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    allOf: List[AllOfItem]
    properties: Properties6


class GroupResourceId(BaseModel):
    type: List[str]
    description: str
    example: Any


class Properties7(BaseModel):
    group_resource_id: GroupResourceId


class ArticleCompletePrivate(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    allOf: List[AllOfItem]
    properties: Properties7


class Url1(BaseModel):
    type: str
    format: str
    description: str
    example: str


class Properties8(BaseModel):
    id: Id
    url: Url1


class ArticleVersions(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties8


class IsEmbargoed1(BaseModel):
    type: str
    example: bool
    description: str


class EmbargoDate1(BaseModel):
    type: List[str]
    description: str
    example: str


class EmbargoType1(BaseModel):
    type: List[str]
    description: str
    example: str


class EmbargoReason1(BaseModel):
    description: str
    type: str
    example: str


class Properties9(BaseModel):
    is_embargoed: IsEmbargoed1
    embargo_date: EmbargoDate1
    embargo_type: EmbargoType1
    embargo_reason: EmbargoReason1


class ArticleEmbargo(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties9


class IsEmbargoed2(BaseModel):
    type: str
    description: str
    example: bool


class EmbargoDate2(BaseModel):
    type: str
    description: str
    example: str


class EmbargoType2(BaseModel):
    type: str
    enum: List[str]
    description: str
    example: str


class EmbargoReason2(BaseModel):
    type: str
    description: str
    example: str


class Properties10(BaseModel):
    is_embargoed: IsEmbargoed2
    embargo_date: EmbargoDate2
    embargo_type: EmbargoType2
    embargo_reason: EmbargoReason2


class ArticleEmbargoUpdater(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties10


class IsConfidential1(BaseModel):
    type: str
    description: str
    example: bool


class Reason(BaseModel):
    description: str
    type: str
    example: str


class Properties11(BaseModel):
    is_confidential: IsConfidential1
    reason: Reason


class ArticleConfidentiality(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties11


class Name(BaseModel):
    description: str
    type: str
    example: str


class Value(BaseModel):
    description: str
    type: str
    example: str


class IsMandatory(BaseModel):
    description: str
    type: List[str]
    example: bool


class Properties12(BaseModel):
    name: Name
    value: Value
    is_mandatory: IsMandatory


class CustomArticleField(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties12


class Properties13(BaseModel):
    doi: Doi3


class ArticleDOI(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties13


class Properties14(BaseModel):
    handle: Handle3


class ArticleHandle(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties14


class Items19(BaseModel):
    type: str


class ExampleItem2(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None


class Authors3(BaseModel):
    type: str
    items: Items19
    description: str
    example: List[ExampleItem2]


class Properties15(BaseModel):
    authors: Authors3


class AuthorsCreator(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    required: List[str]
    properties: Properties15


class Items20(BaseModel):
    type: str
    format: str
    description: str


class Categories3(BaseModel):
    type: str
    description: str
    items: Items20
    example: List[int]


class Properties16(BaseModel):
    categories: Categories3


class CategoriesCreator(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    required: List[str]
    properties: Properties16


class Articles(BaseModel):
    type: str
    description: str
    items: Items20
    example: List[int]


class Properties17(BaseModel):
    articles: Articles


class ArticlesCreator(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    required: List[str]
    properties: Properties17


class ExpiresDate(BaseModel):
    type: str
    description: str
    example: str


class Properties18(BaseModel):
    expires_date: ExpiresDate


class PrivateLinkCreator(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties18


class Id2(BaseModel):
    type: str
    description: str
    example: str


class IsActive1(BaseModel):
    type: str
    description: str
    example: bool


class Properties19(BaseModel):
    id: Id2
    is_active: IsActive1
    expires_date: ExpiresDate


class PrivateLink(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties19


class Link(BaseModel):
    type: str
    description: str
    example: str


class Md5(BaseModel):
    type: str
    description: str
    example: str


class Name1(BaseModel):
    type: str
    description: str
    example: str


class Size1(BaseModel):
    type: str
    format: str
    description: str
    example: int


class Properties20(BaseModel):
    link: Link
    md5: Md5
    name: Name1
    size: Size1


class FileCreator(BaseModel):
    x_tag: str = Field(..., alias='x-tag')
    type: str
    properties: Properties20


class Model(BaseModel):
    ArticleSearch: ArticleSearch
    PrivateArticleSearch: PrivateArticleSearch
    ArticleUpdate: ArticleUpdate
    ArticleCreate: ArticleCreate
    Article: Article
    ProjectArticle: ProjectArticle
    ArticleComplete: ArticleComplete
    ArticleCompletePrivate: ArticleCompletePrivate
    ArticleVersions: ArticleVersions
    ArticleEmbargo: ArticleEmbargo
    ArticleEmbargoUpdater: ArticleEmbargoUpdater
    ArticleConfidentiality: ArticleConfidentiality
    CustomArticleField: CustomArticleField
    ArticleDOI: ArticleDOI
    ArticleHandle: ArticleHandle
    AuthorsCreator: AuthorsCreator
    CategoriesCreator: CategoriesCreator
    ArticlesCreator: ArticlesCreator
    PrivateLinkCreator: PrivateLinkCreator
    PrivateLink: PrivateLink
    FileCreator: FileCreator
