# generated by datamodel-codegen:
#   filename:  create_article_schema.json
#   timestamp: 2023-05-16T14:32:10+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, EmailStr, constr


class Author(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    email: Optional[EmailStr] = None
    orcid_id: Optional[str] = None


class DefinedType(Enum):
    figure = 'figure'
    online_resource = 'online resource'
    preprint = 'preprint'
    book = 'book'
    conference_contribution = 'conference contribution'
    media = 'media'
    dataset = 'dataset'
    poster = 'poster'
    journal_contribution = 'journal contribution'
    presentation = 'presentation'
    thesis = 'thesis'
    software = 'software'


class Model(BaseModel):
    title: str
    description: Optional[str] = None
    is_metadata_record: Optional[bool] = None
    metadata_reason: Optional[str] = None
    tags: Optional[List[str]] = None
    keywords: Optional[List[str]] = None
    references: Optional[List[constr(regex=r'^http://')]] = None
    categories: Optional[List[int]] = None
    categories_by_source_id: Optional[List[str]] = None
    authors: Optional[List[Author]] = None
    custom_fields: Optional[Dict[str, Any]] = None
    defined_type: Optional[DefinedType] = None
    funding: Optional[str] = None
    group_id: Optional[int] = None
